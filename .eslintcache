[{"D:\\GitHub\\Pomodoro-Prime\\src\\components\\TimerCard.js":"1","D:\\GitHub\\Pomodoro-Prime\\src\\components\\SettingsModal.js":"2","D:\\GitHub\\Pomodoro-Prime\\src\\components\\VisualTimer.js":"3","D:\\GitHub\\Pomodoro-Prime\\src\\index.js":"4","D:\\GitHub\\Pomodoro-Prime\\src\\components\\TimeOptions.js":"5","D:\\GitHub\\Pomodoro-Prime\\src\\reportWebVitals.js":"6","D:\\GitHub\\Pomodoro-Prime\\src\\components\\TimerControls.js":"7","D:\\GitHub\\Pomodoro-Prime\\src\\components\\Header.js":"8"},{"size":3405,"mtime":1609221138369,"results":"9","hashOfConfig":"10"},{"size":2660,"mtime":1609111243516,"results":"11","hashOfConfig":"10"},{"size":471,"mtime":1609221761799,"results":"12","hashOfConfig":"10"},{"size":500,"mtime":1608760806934,"results":"13","hashOfConfig":"10"},{"size":1184,"mtime":1608867867268,"results":"14","hashOfConfig":"10"},{"size":362,"mtime":1608760806934,"results":"15","hashOfConfig":"10"},{"size":415,"mtime":1608852645536,"results":"16","hashOfConfig":"10"},{"size":2701,"mtime":1609004929259,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"18pvi25",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\GitHub\\Pomodoro-Prime\\src\\components\\TimerCard.js",["35","36","37","38","39"],"D:\\GitHub\\Pomodoro-Prime\\src\\components\\SettingsModal.js",[],"D:\\GitHub\\Pomodoro-Prime\\src\\components\\VisualTimer.js",[],"D:\\GitHub\\Pomodoro-Prime\\src\\index.js",[],"D:\\GitHub\\Pomodoro-Prime\\src\\components\\TimeOptions.js",["40","41"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\n\r\nfunction TimerOptions(props) {\r\n\r\n  const radios = [\r\n      { name: 'Pomodoro', value: props.TimerTypes.pomodoro },\r\n      { name: 'Short Break', value: props.TimerTypes.shortBreak },\r\n      { name: 'Long Break', value: props.TimerTypes.longBreak },\r\n    ];\r\n\r\n  return (\r\n    <div className=\"TimerOptions\" >\r\n        <ButtonGroup toggle style={{ width: \"100%\"}}>\r\n              {radios.map((radio, idx) => (\r\n              <ToggleButton\r\n                  key={idx}\r\n                  type=\"radio\"\r\n                  variant=\"secondary\"\r\n                  name=\"radio\"\r\n                  value={radio.value}\r\n                  checked={\r\n                    props.timerType === radio.value\r\n                  }\r\n                  onChange={\r\n                    (e) => props.updateTimerType(e.currentTarget.value)\r\n                  }\r\n              >\r\n                  {radio.name}\r\n              </ToggleButton>\r\n              ))}\r\n          </ButtonGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimerOptions;","D:\\GitHub\\Pomodoro-Prime\\src\\reportWebVitals.js",[],"D:\\GitHub\\Pomodoro-Prime\\src\\components\\TimerControls.js",[],"D:\\GitHub\\Pomodoro-Prime\\src\\components\\Header.js",["42","43"],{"ruleId":"44","severity":1,"message":"45","line":60,"column":7,"nodeType":"46","endLine":60,"endColumn":27,"suggestions":"47"},{"ruleId":"44","severity":1,"message":"48","line":68,"column":7,"nodeType":"46","endLine":68,"endColumn":29,"suggestions":"49"},{"ruleId":"44","severity":1,"message":"50","line":76,"column":7,"nodeType":"46","endLine":76,"endColumn":28,"suggestions":"51"},{"ruleId":"44","severity":1,"message":"52","line":81,"column":7,"nodeType":"46","endLine":81,"endColumn":18,"suggestions":"53"},{"ruleId":"44","severity":1,"message":"54","line":103,"column":8,"nodeType":"46","endLine":103,"endColumn":47,"suggestions":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":26},{"ruleId":"56","severity":1,"message":"60","line":1,"column":28,"nodeType":"58","messageId":"59","endLine":1,"endColumn":36},{"ruleId":"56","severity":1,"message":"61","line":3,"column":20,"nodeType":"58","messageId":"59","endLine":3,"endColumn":26},{"ruleId":"56","severity":1,"message":"57","line":3,"column":28,"nodeType":"58","messageId":"59","endLine":3,"endColumn":37},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'prevPomodoroTime', 'timer', 'timerTime', and 'timerType'. Either include them or remove the dependency array. You can also do a functional update 'setTimerTime(t => ...)' if you only need 'timerTime' in the 'setTimerTime' call.","ArrayExpression",["62"],"React Hook useEffect has missing dependencies: 'prevShortBreakTime', 'timer', 'timerTime', and 'timerType'. Either include them or remove the dependency array. You can also do a functional update 'setTimerTime(t => ...)' if you only need 'timerTime' in the 'setTimerTime' call.",["63"],"React Hook useEffect has missing dependencies: 'prevLongBreakTime', 'timer', 'timerTime', and 'timerType'. Either include them or remove the dependency array. You can also do a functional update 'setTimerTime(t => ...)' if you only need 'timerTime' in the 'setTimerTime' call.",["64"],"React Hook useEffect has a missing dependency: 'TimerLengths'. Either include it or remove the dependency array.",["65"],"React Hook useEffect has missing dependencies: 'TimerLengths', 'TimerTypes.pomodoro', 'TimerTypes.shortBreak', 'timer', and 'timerType'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTimerTime' needs the current value of 'timerType'.",["66"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useRef' is defined but never used.",{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [prevPomodoroTime, props.pomodoroTime, timer, timerTime, timerType]",{"range":"77","text":"78"},"Update the dependencies array to be: [prevShortBreakTime, props.shortBreakTime, timer, timerTime, timerType]",{"range":"79","text":"80"},"Update the dependencies array to be: [prevLongBreakTime, props.longBreakTime, timer, timerTime, timerType]",{"range":"81","text":"82"},"Update the dependencies array to be: [TimerLengths, timerType]",{"range":"83","text":"84"},"Update the dependencies array to be: [timerTime, isPaused, needToResetTimer, TimerLengths, timerType, timer, TimerTypes.pomodoro, TimerTypes.shortBreak]",{"range":"85","text":"86"},[1671,1691],"[prevPomodoroTime, props.pomodoroTime, timer, timerTime, timerType]",[1895,1917],"[prevShortBreakTime, props.shortBreakTime, timer, timerTime, timerType]",[2118,2139],"[prevLongBreakTime, props.longBreakTime, timer, timerTime, timerType]",[2243,2254],"[TimerLengths, timerType]",[2860,2899],"[timerTime, isPaused, needToResetTimer, TimerLengths, timerType, timer, TimerTypes.pomodoro, TimerTypes.shortBreak]"]