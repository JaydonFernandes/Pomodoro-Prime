[{"D:\\GitHub\\Pomodoro-Prime\\src\\reportWebVitals.js":"1","D:\\GitHub\\Pomodoro-Prime\\src\\App.js":"2","D:\\GitHub\\Pomodoro-Prime\\src\\components\\TimerCard.js":"3","D:\\GitHub\\Pomodoro-Prime\\src\\components\\Header.js":"4","D:\\GitHub\\Pomodoro-Prime\\src\\components\\TimerControls.js":"5","D:\\GitHub\\Pomodoro-Prime\\src\\components\\TimeOptions.js":"6","D:\\GitHub\\Pomodoro-Prime\\src\\components\\VisualTimer.js":"7","D:\\GitHub\\Pomodoro-Prime\\src\\index.js":"8","D:\\GitHub\\Pomodoro-Prime\\src\\components\\SettingsModal.js":"9"},{"size":362,"mtime":1608760806934,"results":"10","hashOfConfig":"11"},{"size":951,"mtime":1609000645324,"results":"12","hashOfConfig":"11"},{"size":3405,"mtime":1609111263031,"results":"13","hashOfConfig":"11"},{"size":2701,"mtime":1609004929259,"results":"14","hashOfConfig":"11"},{"size":415,"mtime":1608852645536,"results":"15","hashOfConfig":"11"},{"size":1184,"mtime":1608867867268,"results":"16","hashOfConfig":"11"},{"size":472,"mtime":1608986521446,"results":"17","hashOfConfig":"11"},{"size":500,"mtime":1608760806934,"results":"18","hashOfConfig":"11"},{"size":2660,"mtime":1609111243516,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18pvi25",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\GitHub\\Pomodoro-Prime\\src\\reportWebVitals.js",[],"D:\\GitHub\\Pomodoro-Prime\\src\\App.js",[],"D:\\GitHub\\Pomodoro-Prime\\src\\components\\TimerCard.js",["40","41","42","43","44"],"D:\\GitHub\\Pomodoro-Prime\\src\\components\\Header.js",["45","46"],"import SettingsModal from './SettingsModal'\r\n\r\nimport { useState, useRef, useEffect } from \"react\";\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction Header(props) {\r\n\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  const [updatedPomodoroTime, setUpdatedPomodoroTime] = useState(props.pomodoroTime);\r\n  const [updatedShortBreakTime, setUpdatedShortBreakTime] = useState(props.shortBreakTime);\r\n  const [updatedLongBreakTime, setUpdatedLongBreakTime] = useState(props.longBreakTime);\r\n\r\n\r\n  //TODO \r\n  //write code so time is added when modal closes\r\n  const onModalClose = function(){\r\n    console.log(\"Modal Complete...\");\r\n    // console.log(oldPomo);\r\n    console.log(\"updatedPomodoroTime: \"+ updatedPomodoroTime)\r\n    console.log(\"updatedShortBreakTime: \"+ updatedShortBreakTime)\r\n    console.log(\"updatedLongBreakTime: \"+ updatedLongBreakTime)\r\n\r\n    var isFormValid = true;\r\n    console.log(isFormValid)\r\n\r\n    if ( (updatedPomodoroTime) && (updatedPomodoroTime >= 1)){\r\n      props.setPomodoroTime(updatedPomodoroTime)\r\n      \r\n    }else{\r\n      isFormValid = false;\r\n      setUpdatedPomodoroTime(props.pomodoroTime)\r\n    }\r\n\r\n    console.log(isFormValid)\r\n\r\n    if ( (updatedShortBreakTime) && (updatedShortBreakTime >= 1)){\r\n      props.setShortBreakTime(updatedShortBreakTime)\r\n      \r\n    }else{\r\n      isFormValid = false;\r\n      setUpdatedShortBreakTime(props.shortBreakTime)\r\n    }\r\n\r\n    if ( (updatedLongBreakTime) && (updatedLongBreakTime >= 1)){\r\n      props.setLongBreakTime(updatedLongBreakTime)\r\n      \r\n    }else{\r\n      isFormValid = false;\r\n      setUpdatedLongBreakTime(props.longBreakTime)\r\n    }\r\n\r\n    console.log(isFormValid)\r\n    if ( isFormValid ){\r\n      setModalShow(false);\r\n    }\r\n    \r\n  }\r\n\r\n  \r\n\r\n    return (\r\n      <div>\r\n        <Row style={{ marginTop: \"1rem\"}}>\r\n          <Col><h3>Pomodoro Prime</h3></Col>\r\n          <Col md={{ span: 1}}>\r\n              <span><Button style={{float: \"right\"}} onClick={() => setModalShow(true)} >Settings</Button></span>\r\n          </Col>        \r\n        </Row>\r\n        <SettingsModal\r\n          setUpdatedPomodoroTime = {setUpdatedPomodoroTime}\r\n          setUpdatedShortBreakTime = {setUpdatedShortBreakTime}\r\n          setUpdatedLongBreakTime = {setUpdatedLongBreakTime}\r\n\r\n          updatedPomodoroTime = {updatedPomodoroTime}\r\n          updatedShortBreakTime = {updatedShortBreakTime}\r\n          updatedLongBreakTime = {updatedLongBreakTime}\r\n\r\n\r\n          timesettings={props}\r\n          show={modalShow}\r\n          onHide={onModalClose}\r\n        />\r\n      </div>\r\n      \r\n    );\r\n  }\r\n  \r\n  export default Header;","D:\\GitHub\\Pomodoro-Prime\\src\\components\\TimerControls.js",[],"D:\\GitHub\\Pomodoro-Prime\\src\\components\\TimeOptions.js",["47","48"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\n\r\nfunction TimerOptions(props) {\r\n\r\n  const radios = [\r\n      { name: 'Pomodoro', value: props.TimerTypes.pomodoro },\r\n      { name: 'Short Break', value: props.TimerTypes.shortBreak },\r\n      { name: 'Long Break', value: props.TimerTypes.longBreak },\r\n    ];\r\n\r\n  return (\r\n    <div className=\"TimerOptions\" >\r\n        <ButtonGroup toggle style={{ width: \"100%\"}}>\r\n              {radios.map((radio, idx) => (\r\n              <ToggleButton\r\n                  key={idx}\r\n                  type=\"radio\"\r\n                  variant=\"secondary\"\r\n                  name=\"radio\"\r\n                  value={radio.value}\r\n                  checked={\r\n                    props.timerType === radio.value\r\n                  }\r\n                  onChange={\r\n                    (e) => props.updateTimerType(e.currentTarget.value)\r\n                  }\r\n              >\r\n                  {radio.name}\r\n              </ToggleButton>\r\n              ))}\r\n          </ButtonGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimerOptions;","D:\\GitHub\\Pomodoro-Prime\\src\\components\\VisualTimer.js",[],"D:\\GitHub\\Pomodoro-Prime\\src\\index.js",[],"D:\\GitHub\\Pomodoro-Prime\\src\\components\\SettingsModal.js",[],{"ruleId":"49","severity":1,"message":"50","line":60,"column":7,"nodeType":"51","endLine":60,"endColumn":27,"suggestions":"52"},{"ruleId":"49","severity":1,"message":"53","line":68,"column":7,"nodeType":"51","endLine":68,"endColumn":29,"suggestions":"54"},{"ruleId":"49","severity":1,"message":"55","line":76,"column":7,"nodeType":"51","endLine":76,"endColumn":28,"suggestions":"56"},{"ruleId":"49","severity":1,"message":"57","line":81,"column":7,"nodeType":"51","endLine":81,"endColumn":18,"suggestions":"58"},{"ruleId":"49","severity":1,"message":"59","line":103,"column":8,"nodeType":"51","endLine":103,"endColumn":47,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":3,"column":20,"nodeType":"63","messageId":"64","endLine":3,"endColumn":26},{"ruleId":"61","severity":1,"message":"65","line":3,"column":28,"nodeType":"63","messageId":"64","endLine":3,"endColumn":37},{"ruleId":"61","severity":1,"message":"65","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":26},{"ruleId":"61","severity":1,"message":"66","line":1,"column":28,"nodeType":"63","messageId":"64","endLine":1,"endColumn":36},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'prevPomodoroTime', 'timer', 'timerTime', and 'timerType'. Either include them or remove the dependency array. You can also do a functional update 'setTimerTime(t => ...)' if you only need 'timerTime' in the 'setTimerTime' call.","ArrayExpression",["67"],"React Hook useEffect has missing dependencies: 'prevShortBreakTime', 'timer', 'timerTime', and 'timerType'. Either include them or remove the dependency array. You can also do a functional update 'setTimerTime(t => ...)' if you only need 'timerTime' in the 'setTimerTime' call.",["68"],"React Hook useEffect has missing dependencies: 'prevLongBreakTime', 'timer', 'timerTime', and 'timerType'. Either include them or remove the dependency array. You can also do a functional update 'setTimerTime(t => ...)' if you only need 'timerTime' in the 'setTimerTime' call.",["69"],"React Hook useEffect has a missing dependency: 'TimerLengths'. Either include it or remove the dependency array.",["70"],"React Hook useEffect has missing dependencies: 'TimerLengths', 'TimerTypes.pomodoro', 'TimerTypes.shortBreak', 'timer', and 'timerType'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTimerTime' needs the current value of 'timerType'.",["71"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.",{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"Update the dependencies array to be: [prevPomodoroTime, props.pomodoroTime, timer, timerTime, timerType]",{"range":"82","text":"83"},"Update the dependencies array to be: [prevShortBreakTime, props.shortBreakTime, timer, timerTime, timerType]",{"range":"84","text":"85"},"Update the dependencies array to be: [prevLongBreakTime, props.longBreakTime, timer, timerTime, timerType]",{"range":"86","text":"87"},"Update the dependencies array to be: [TimerLengths, timerType]",{"range":"88","text":"89"},"Update the dependencies array to be: [timerTime, isPaused, needToResetTimer, TimerLengths, timerType, timer, TimerTypes.pomodoro, TimerTypes.shortBreak]",{"range":"90","text":"91"},[1671,1691],"[prevPomodoroTime, props.pomodoroTime, timer, timerTime, timerType]",[1895,1917],"[prevShortBreakTime, props.shortBreakTime, timer, timerTime, timerType]",[2118,2139],"[prevLongBreakTime, props.longBreakTime, timer, timerTime, timerType]",[2243,2254],"[TimerLengths, timerType]",[2860,2899],"[timerTime, isPaused, needToResetTimer, TimerLengths, timerType, timer, TimerTypes.pomodoro, TimerTypes.shortBreak]"]